----------------------------------------------------
Green Ruby News #104 - feb 1st 2015
----------------------------------------------------
*|IFNOT:CONTENT=Only Rant|*

Look
----------------------------------------------------
Examples of UI/UX, graphic performance, web design and flashy things.

*Trippeo* (design)
https://www.trippeo.com/
Nicely animated website for a traveling expenses app.

*User Flow Patterns* (mobile)
http://userflowpatterns.com/
Collection of small videos of user interaction on mobile apps.

Use
----------------------------------------------------
Web applications, resources and tools, available for making our life easier or funnier.

*Rspec website* (rb)
http://rspec.info/
New shiny design, for this champion of ruby testing.

*Learn Ruby by Example* (rb)
https://www.learneroo.com/modules/61
Learn or reference Ruby with example code and challenges.

*Jekyll Cheat Sheet* (rb)
https://github.com/feedreader/planet-jekyll/blob/gh-pages/QUICKREF.md
Great supplement to the Jekyll documentation, this page has  a lot of examples.

*I Love Ruby* (rb)
https://www.dropbox.com/s/ox1neltjz7cghmd/ilr2015.pdf
(book) 220 pages of ruby, this is a self-published free book.

*Overapi* (tool)
http://overapi.com/
Collecting All Cheat Sheets.

*iOS on Rails* (mobile)
https://gumroad.com/l/ios-on-rails/
(book) The reference for writing iOS apps with Ruby on Rails backends, by Thoughtbot.

*InboxPixels* (design)
http://inboxpixels.com/
A weekly newsletter bringing design inspiration.

Install
----------------------------------------------------
A selection of gems or applications updated during past week.

*Kleisli* (rb)
http://blog.txus.io/kleisli/
Usable, idiomatic common monads in Ruby.

*Dos-t* (rb)
https://github.com/jalkoby/tt
An opinionated helper for I18n.

*Dockerb* (rb)
https://github.com/grosser/dockerb
Use ruby in your dynamic Dockerfile.erb.

*Intercooler* (js)
http://intercoolerjs.org/
Making AJAX as simple as anchor tags.

*Spacebase* (css3)
http://spacebase.space150.com/
Sass-based responsive CSS framework.

*Shipit* (tool)
https://github.com/shipitjs/shipit
Universal automation and deployment tool written in JavaScript.

*GitHooks* (tool)
https://github.com/rabbitt/githooks
Framework for creating standard pre-commit and commit-msg hooks for your git repository.

*Prometheus* (ops)
http://prometheus.io/
An open-source service monitoring system and time series database.

*Comcast* (ops)
https://github.com/tylertreat/Comcast
Simulating shitty network connections so you can build better systems.

*Toxiproxy* (ops)
https://github.com/Shopify/toxiproxy
A proxy to simulate network and system conditions.

Read
----------------------------------------------------
From the blogosphere or news feeds ...

*Game Development in Go* (go - jan 25)
http://www.j15r.com/blog/2015/01/25/Game_Development_in_Go
Thoughts from a game developer about using golang for game dev (with example code).

*Closures in Ruby* (rb - jan 26)
http://www.sitepoint.com/closures-ruby/
Blocs, procs and lambdas, pros and cons, with examples.

*Monitor Docker Containers with Prometheus* (ops - jan 26)
http://5pi.de/2015/01/26/monitor-docker-containers-with-prometheus/
Prometheus, used with a container-exporter, makes it easy to monitor many docker containers.

*What the Flux?* (js - jan 28)
http://jonathancreamer.com/what-the-flux/
React.js and Flux architecture, hard to get around, but here are some concepts explained.

*Ruby serialization formats* (rb - jan 28)
http://azranel.github.io/programming/rubyserializationformats/
There are many ways to serialize objects, here are 5 of them.

*Non-Message Flash in Rails* (rb - jan 28)
http://www.collectiveidea.com/blog/archives/2015/01/28/non-message-flash-in-rails/
Messages arenâ€™t the only reason to use flash.

*Building and Testing Resilient Ruby on Rails Applications* (rb - jan 29)
http://www.shopify.com/technology/16906928-building-and-testing-resilient-ruby-on-rails-applications
Pretty good description of a resilient architecture by shopify.

*Replace CoffeeScript with ES6* (rb - jan 29)
http://robots.thoughtbot.com/replace-coffeescript-with-es6
Sprocket-es6 will transpile to es5 anyways.

*How React.js Outperforms Angular.js* (js - jan 29)
http://ewebdesign.com/react-js-angular-js/
Of course they are not same kind of beast, but they still can be compared, right?

*Why JavaScript Needs Types* (js - jan 29)
http://architects.dzone.com/articles/why-javascript-needs-types
Various reasons why js may need typing.

*Sass Basics: The Function Directive* (css3 - jan 29)
http://www.sitepoint.com/sass-basics-function-directive/
What a @function does in Sass.

*The Best Code is the Code Nobody Writes* (rb - jan 30)
http://rubyist.jaredwhite.com/2015/01/30/the-best-code-is-the-code-nobody-writes/
Adopt a minimalist approach when coding.

*Require only what you require* (rb - jan 31)
http://twin.github.io/2015/01/require-only-what-you-require/
This may sound obvious, but actually many gems require everything by default.

*10 easy-to-fix Ruby and Rails mistakes* (rb - jan 31)
http://adamniedzielski.github.io/blog/2015/01/31/11-easy-to-fix-ruby-slash-ruby-on-rails-mistakes/
A short list of common mistakes found in ruby code.

*When your Rails app slows to a crawl* (rb - feb 1)
http://www.leighhalliday.com/posts/when-your-rails-app-slows-to-a-crawl
Some usual suspects that can slow down a rails app.

Watch
----------------------------------------------------
Screencasts and conferences videos, or other video feeds ...

*Sysadmincast #44* (ops - jan 28 - 14m)
https://sysadmincasts.com/episodes/44-patching-the-ghost-glibc-gethostbyname-cve-2015-0235-bug
Patching the GHOST glibc gethostbyname CVE-2015-0235 bug.

Listen
----------------------------------------------------
What could be heard last week ..

*Giant Robots 131* (web - jan 26 - 32m)
http://giantrobots.fm/131
The Human-Computer Interaction Umbrella (Irene Ros).

*Developer tea 11* (rb - jan 26 - 14m)
http://www.developertea.com/episodes/6736
Justin Weiss - choosing Rails, guest hosting on Ruby Tapas, and enjoying Ruby.

*Ruby5 #523* (rb - jan 27 - 6m)
https://ruby5.codeschool.com/episodes/561-episode-523-january-27th-2015
Tail call optimization, single vs. double quotes, ActiveRecord SQLServer, Rbkit, Commander.

*RubyRogues 192* (rb - jan 28 - 56m)
http://devchat.tv/ruby-rogues/192-rr-vagrant-with-mitchell-hashimoto
Vagrant with Mitchell Hashimoto.

*Web Platform Podcast #27* (web - jan 28 - 1h06)
http://thewebplatform.libsyn.com/27-building-codepen
Building Codepen.

*Javascript Jabber 144* (js - jan 28 - 38m)
http://devchat.tv/js-jabber/144-jsj-marionette-js-2-0-with-sam-saccone
Marionette.js 2.0 with Sam Saccone.

*Developer tea 12* (web - jan 28 - 15m)
http://www.developertea.com/episodes/6830
Chris Coyier, Part One - The Lifecycle of the Web and the Non-Evil of Doing Business.

*Adventure in angular #27* (js - jan 29 - 45m)
http://devchat.tv/adventures-in-angular/027-aia-accessibility-with-marcy-sutton
Accessibility with Marcy Sutton.

*Food fight show 87* (ops - jan 29 - 1h04)
http://foodfightshow.org/2015/01/complexity-theory-and-cynefin.html
Complexity Theory and Cynefin.

*Ruby5 #524* (rb - jan 30 - 7m)
https://ruby5.codeschool.com/episodes/562-episode-524-january-30th-2015
Minitest and RSpec, Passenger-docker, Converting a large JRuby project to GoLang.

*The Changelog 139* (rb - jan 30 - 1h02)
http://5by5.tv/changelog/139
Rocket, App Container Spec, and CoreOS with Alex Polvi.

*The Bike Shed 7* (rb - jan 30 - 48m)
http://bikeshed.fm/7
At the Car Wash.

*NodeUp 82* (js - jan 30 - 57m)
http://nodeup.com/eightytwo
A 6to5 show.

*The Cloudcast #178* (ops - jan 30 - 37m)
http://www.thecloudcast.net/2015/01/the-cloudcast-178-devops-defined.html
DevOps Defined Networking with Socketplane.

. . . . . . . . . . . . . . . . . . . . . . . . . .
Links curated by by mose (editor), xenor (informers).
*|END:IF|*
*|IFNOT:CONTENT=Only Links|*

Rant
----------------------------------------------------
The random rant of the week by mose.

#### Ghost

You certainly heard about it, this week there was a new huge Linux
[vulnerability on glibc][5] revealed. Actually it was leaked by a stupid
communication agency few hours before it should have been announced. When such
big bug is discovered usually there is a small period of time where the news
spread into some limited circles. They keep it embargoed until major distro
vendors get patched packages ready. Well, it didn't go that well this time.

This vulnerability is pretty nasty even if less obvious to exploit than
Heartbleed or shellshock, it's probably in the same category. If you manage
servers that are vulnerable (LTS and stable, less up to date versions,
mostly), you better upgrade asap. When a bug gets its own name (this one is
called Ghost), it seems to be the sign it requires immediate attention. How
long is this trick going to work?

And, as we talk about security, Hipchat users should read this (unnamed)
[security notice][6].

#### 2 years

This edition is marking the 2 years anniversary of Green Ruby. For 104 weeks
I've been sending out this newsletter every week. Last week I had a discussion
with a friend, he was asking me what was my drive, and what was the reason of
my consistency. Well, there are various reasons.

First there is the routine aspect. It's like practicing Taichi or some kind of
exercise. It keeps the mind fresh, and in this context where things change
pretty fast, enforcing a weekly review gave me an overall feeling of symbiosis
with the wave of what's going on.

Second is the philosophy of it: this newsletter is a gift. The ruby world is
very business oriented. There is a lot of open source in there but still the
average spirit is based on a market economy. There are of course many
exceptions, I wanted to be one of them, and I believe a gift economy would be
more my thing. You get rich of what you give away, not always individually,
but most definitely collectively. I like that feeling.

Third, this media keeps me in touch with a bunch of my friends. It's like a
beacon that I send to the people I left behind when I left France to go live
in Taiwan. Or people I worked with in my past jobs in Taiwan, even. They don't
often respond to it but I know they can perceive me through this weekly proof
of existence.

Also, there is the support from xenor and more recently from simon, which, by
sending me a few links each weeks, validate the need to keep things going.

#### Trello and irc

For as long as I remember, I always have been coding irc bots. In so many
languages. I suspect there is some aspect of this that appeals to me. Maybe
the creation of life-like pattern. Anyways, my last bot was of course in ruby,
I called it [cogbot][1], and is based on the great [cinch]2] framework. It has
been sleepy for a while, since we were not using irc in Faria.

But Gandi is heavy irc user, and our recent experiments on trello gave me an
occasion to get cogbot out of the dust. As a matter of fact [Trello][3] has a
really [great API][4], and also supports webhooks. So I added a trello
listener to cogbot, and it was a lot of fun. Maybe next I will add some cards
creation and update features in that bot, but it requires some kind of users
management, which, on an irc bot, is not that trivial to implement.

#### Free your code

Do you have a side project? You should! Maybe the code you produce at work can
be generic enough? This is a call for you to consider freeing your code. Open
source community is plentiful but I know as a fact that 90% of the code that
could be shared is not shared.

There is something I noticed in my own code publication. Often in my work
there are constraints of time that lead to trade-offs and code quality is
never as good as I wish it was. By working on side projects, the pace is much
more relaxed and I can spend hours focusing on non productive efforts to make
my code better. Well, this is not to say that side project code is perfect,
but the environment of producing it brings another mindset. And after a while,
the code produced at work gets naturally more insightful because of this extra
practice.

Give it a try, if you happen to have some free time. If you don't have free
time, you're doing something wrong. But that's another story.

[1]: https://github.com/mose/cogbot
[2]: https://github.com/cinchrb/cinch
[3]: https://trello.com
[4]: https://trello.com/docs/
[5]: http://www.openwall.com/lists/oss-security/2015/01/27/9
[6]:
https://blog.hipchat.com/2015/02/01/hipchat-security-notice-and-password-reset/

*|END:IF|*

====================================================
EOF

Feel free to send us feedback or information at
news@greenruby.org

follow on Twitter @greenrubist
forward to a friend *|FORWARD|*
Subscribe *|LIST:SUBSCRIBE|*

Copyright (c) *|CURRENT_YEAR|* Mose
http://creativecommons.org/licenses/by-sa/3.0/
This publication is licensed under a
Creative Commons Attribution-ShareAlike 3.0 License




